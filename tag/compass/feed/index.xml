<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>compass &#8211; DesireLabs</title>
	<atom:link href="/tag/compass/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>DÃ©veloppement web, marketing digital, et rÃ©fÃ©rencement</description>
	<lastBuildDate>Tue, 06 Jun 2017 17:34:36 +0000</lastBuildDate>
	<language>fr-FR</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.4</generator>
<site xmlns="com-wordpress:feed-additions:1">67143140</site>	<item>
		<title>Utiliser SASS dans ses projets WordPress</title>
		<link>/utiliser-sass-projets-wordpress/</link>
		<comments>/utiliser-sass-projets-wordpress/#respond</comments>
		<pubDate>Sun, 10 Jan 2016 20:05:15 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[HTML/CSS]]></category>
		<category><![CDATA[Non classÃ©]]></category>
		<category><![CDATA[sass]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[compass]]></category>

		<guid isPermaLink="false">/?p=456</guid>
		<description><![CDATA[<p>Sass est devenu pour moi un outil du quotidien. Je l&#8217;utilise dans presque tous mes projets. Le fait est que je travaille beaucoup avec WordPress. Il est donc devenu Ã©vident qu&#8217;il fallait que je dÃ©veloppe une mÃ©thodologie pour le faire entrer dans ces projets-ci. Aujourd&#8217;hui je vous propose de dÃ©couvrir de quelle maniÃ¨re intÃ©grer Sass &#8230; <a href="/utiliser-sass-projets-wordpress/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Utiliser SASS dans ses projets WordPress</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/utiliser-sass-projets-wordpress/">Utiliser SASS dans ses projets WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Sass est devenu pour moi un outil du quotidien. Je l&rsquo;utilise dans presque tous mes projets. Le fait est que je travaille beaucoup avec WordPress. Il est donc devenu Ã©vident qu&rsquo;il fallait que je dÃ©veloppe une mÃ©thodologie pour le faire entrer dans ces projets-ci. Aujourd&rsquo;hui je vous propose de dÃ©couvrir de quelle maniÃ¨re intÃ©grer Sass dans vos projets WordPress.<span id="more-456"></span></p>
<p>Un thÃ¨me WordPress nÃ©cessite normalement 1 seul et unique fichier CSS, Ã  la racine : style.css. Mais tout mettre au kilomÃ¨tre dans ce fichier c&rsquo;est la garantie de rendre le projet difficile Ã  maintenir et Ã  faire Ã©voluer. C&rsquo;est pourquoi on prÃ©fÃ¨rera dÃ©couper son design en modules. Plusieurs mÃ©thodologies existent, mais celle qui fait sens Ã  mes yeux se rapproche de SMACSS. Je vous invite Ã  aller faire un tour sur <a href="https://smacss.com/" target="_blank">leur site</a>, on y apprend des choses trÃ¨s intÃ©ressantes sur les maniÃ¨res possibles de dÃ©couper son design CSS.</p>
<p>La puissance des prÃ©processeurs CSS n&rsquo;est plus Ã  dÃ©montrer : ils nous permettent de s&rsquo;affranchir des prÃ©fixes vendeurs, d&rsquo;apporter de la logique dans nos feuilles de styles, de sÃ©parer proprement notre architecture, bref, de tout calibrer au plus juste sans se rÃ©pÃ©ter. C&rsquo;est la mÃ©thode DRY (Don&rsquo;t repeat yourself). Globalement, on gagne en productivitÃ©, en stabilitÃ©, on limite les rÃ©gressions et en plus on s&rsquo;Ã©clate. Que demander de plus ?</p>
<p><strong>Sass embrasse parfaitement cette philosophie du DRY et de la scalabilitÃ©. Mais pour lâ€™installer sur WordPress comment Ã§a se passe ?</strong></p>
<p>PremiÃ¨rement, il faut avoir dÃ©jÃ  installÃ© et configurÃ© les outils sur sa machine. Dans mon cas, j&rsquo;utilise le framework COMPASS. Il est rÃ©putÃ© pour Ãªtre l&rsquo;un des plus complets avec une palette de mixins trÃ¨s Ã©tendue, et mÃªme si pas mal lui reprochent d&rsquo;Ãªtre assez lourd / lent Ã  la compilation, de mon point de vue c&rsquo;est Ã  la marge. Car si vous n&rsquo;avez jamais utilisÃ© SASS / COMPASS, il faut savoir que le code que vous gÃ©nÃ©rez est compilÃ© Ã  la volÃ©e en fichier css standards.</p>
<p>Je pars du principe que les personnes qui lisent cet articles ont dÃ©jÃ  COMPASS d&rsquo;installÃ© et sont prÃªts Ã  se lancer.</p>
<p>Pour dÃ©marrer le projet (thÃ¨me ou plugin) en mode SASS, il suffit d&rsquo;initialiser un projet COMPASS Ã  la racine. Si je construit un thÃ¨me, j&rsquo;ouvrirai le terminal Ã  la racine de mon thÃ¨me et je taperai :</p>
<p></p><pre class="crayon-plain-tag">compass init</pre><p></p>
<p>A la suite de quoi, je me retrouve avec un fichier config.rb, ainsi que 2 nouveaux dossiers : sass et stylesheets. Le dossier sass est celui dans lequel on va travailler Ã  l&rsquo;avenir, mais avant, il faut aller un peu plus loin :</p>
<p>Les fichiers scss contenu dans le dossier sass vont entrainer la crÃ©ation / modification de leur alter Ã©go css contenu dans le dossier stylesheets, Ã  chaque fois que j&rsquo;ajouterai / modifierai un fichier scss. Je vais donc devoir demander Ã  compass de se mettre en Â«Â Ã©couteÂ Â», de maniÃ¨re Ã  <em>catcher</em> les modifications au fur et Ã  mesure. Je tape donc dans mon terminal, toujours Ã  la racine de mon thÃ¨me :</p>
<p></p><pre class="crayon-plain-tag">compass watch</pre><p></p>
<p>Le watcher est Ã  prÃ©sent en mode Â«Â Ã©couteÂ Â», et toutes les modifications effectuÃ©es dans le dossier sass seront automatiquement compilÃ©es dans le dossier stylesheets. Mais cela ne suffit pas. Il faut dÃ¨s maintenant indiquer Ã  WordPress comment rÃ©cupÃ©rer / lire les fichiers css crÃ©Ã©s.</p>
<p><strong>Voici la logique que j&rsquo;appliqu</strong>e :</p>
<p>Mon fichier style.css Ã  la racine de mon thÃ¨me va dÃ¨s Ã  prÃ©sent me servir de passerelle, en appelant un seul et unique fichier contenu dans le dossier stylesheets. Bien sÃ»r, la crÃ©ation de ce fichier se passe d&rsquo;abord dans le dossier sass : je crÃ©Ã© un fichier nommÃ© Â«Â main.scssÂ Â», et automatiquement, son copain Â«Â main.cssÂ Â» est crÃ©Ã©. Il me suffit alors d&rsquo;importer ce fichier css dans mon Â«Â style.cssÂ Â» :</p>
<p></p><pre class="crayon-plain-tag">@import url(stylesheets/main.css);</pre><p></p>
<p>Mais alors, et les autres fichiers aussi il va falloirÂ  les importer ? Oui et non. En fait ce qu&rsquo;on va faire c&rsquo;est crÃ©er uniquement des fichiers scss qui ne seront pas compilÃ©s en fichiers css. Le but n&rsquo;est pas de remplir le dossier stylesheets, mais de le maintenir avec un seul fichier : notre fameux main.css, et de dire Ã  ce dernier de faire tous les imports des fichiers qu&rsquo;on va crÃ©er par la suite.</p>
<p>Du coup on va prÃ©fixer tous nos nouveux fichiers scss avec un underscore Â«Â _Â Â». Par exemple, si je veux un fichier scss dÃ©diÃ© Ã  la navigation et un autre Ã  mes modules, je vais les nommer respectivement Â«Â _navigation.scssÂ Â» et Â«Â _modules.scssÂ Â». De cette maniÃ¨re je suis tranquille, je sais qu&rsquo;ils ne seront pas compilÃ©s en css. Il ne reste plus qu&rsquo;Ã  les importer dans l&rsquo;ordre qui nous convient, dans le fichier main.scss (qui lui ne possÃ¨de pas d&rsquo;underscore, et est donc compiler en main.css).</p>
<p>Voici ce que j&rsquo;Ã©cris dans mon main.scss :</p>
<p></p><pre class="crayon-plain-tag">@import "compass";
@import "navigation";
@import "modules";</pre><p></p>
<p>PremiÃ¨re chose Ã  noter, j&rsquo;importe les fichiers en les appelant par leur nom, sans l&rsquo;underscore et sans leur extension. C&rsquo;est tout Ã  fait normal. De plus je n&rsquo;utilise pas Â«Â url(nom du fichier)Â Â», je met directement le nom de mon fichier entre guillemets, et c&rsquo;est tout ! L&rsquo;import de Â«Â compassÂ Â» est nÃ©cessaire mais non obligatoire : le fait d&rsquo;utiliser le compilateur de COMPASS ne vous oblige nullement Ã  utiliser les mixins fournies, mais bon, ce serait dommage de se priver <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Pour ma part je recommande de ne pas importer COMPASS entiÃ¨rement, mais de sÃ©lectionner les outils qui vous intÃ©ressent. Je vous laisse jeter un oeil Ã  la <a href="http://compass-style.org/help/" target="_blank">documentation de compass</a> Ã  ce sujet.</p>
<p><strong>Si on rÃ©capitule :</strong></p>
<p>j&rsquo;ai un fichier style.css qui importe le fichier main.css, qui lui mÃªme est issu de la compilation de main.scss, et c&rsquo;est dans main.scss qu&rsquo;on importe autres feuilles de style scss. C&rsquo;est aussi simple que Ã§a ! Les modules importÃ©s sont prÃ©fixÃ©s d&rsquo;un underscore, de maniÃ¨re Ã  ne pas gÃ©nÃ©rer un fichier css pour rien, mais de tout centraliser grÃ¢ce Ã  un seul et unique fichier : main.scss</p>
<p>C&rsquo;est ainsi que je procÃ¨de dans mes projets, une fois que tout est en place, il ne me reste qu&rsquo;Ã  lancer mon watcher et tout se fait dans le dossier sass Ã  la racine du thÃ¨me. On ne peut faire plus simple, enfin pas tant que les navigateurs ne parleront pas autre chose que du css <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Lâ€™article <a rel="nofollow" href="/utiliser-sass-projets-wordpress/">Utiliser SASS dans ses projets WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/utiliser-sass-projets-wordpress/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">456</post-id>	</item>
	</channel>
</rss>
