<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Wordpress &#8211; DesireLabs</title>
	<atom:link href="/category/cms/wordpress/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>DÃ©veloppement web, marketing digital, et rÃ©fÃ©rencement</description>
	<lastBuildDate>Tue, 06 Jun 2017 17:34:36 +0000</lastBuildDate>
	<language>fr-FR</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.4</generator>
<site xmlns="com-wordpress:feed-additions:1">67143140</site>	<item>
		<title>Utiliser SASS dans ses projets WordPress</title>
		<link>/utiliser-sass-projets-wordpress/</link>
		<comments>/utiliser-sass-projets-wordpress/#respond</comments>
		<pubDate>Sun, 10 Jan 2016 20:05:15 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[HTML/CSS]]></category>
		<category><![CDATA[Non classÃ©]]></category>
		<category><![CDATA[sass]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[compass]]></category>

		<guid isPermaLink="false">/?p=456</guid>
		<description><![CDATA[<p>Sass est devenu pour moi un outil du quotidien. Je l&#8217;utilise dans presque tous mes projets. Le fait est que je travaille beaucoup avec WordPress. Il est donc devenu Ã©vident qu&#8217;il fallait que je dÃ©veloppe une mÃ©thodologie pour le faire entrer dans ces projets-ci. Aujourd&#8217;hui je vous propose de dÃ©couvrir de quelle maniÃ¨re intÃ©grer Sass &#8230; <a href="/utiliser-sass-projets-wordpress/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Utiliser SASS dans ses projets WordPress</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/utiliser-sass-projets-wordpress/">Utiliser SASS dans ses projets WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Sass est devenu pour moi un outil du quotidien. Je l&rsquo;utilise dans presque tous mes projets. Le fait est que je travaille beaucoup avec WordPress. Il est donc devenu Ã©vident qu&rsquo;il fallait que je dÃ©veloppe une mÃ©thodologie pour le faire entrer dans ces projets-ci. Aujourd&rsquo;hui je vous propose de dÃ©couvrir de quelle maniÃ¨re intÃ©grer Sass dans vos projets WordPress.<span id="more-456"></span></p>
<p>Un thÃ¨me WordPress nÃ©cessite normalement 1 seul et unique fichier CSS, Ã  la racine : style.css. Mais tout mettre au kilomÃ¨tre dans ce fichier c&rsquo;est la garantie de rendre le projet difficile Ã  maintenir et Ã  faire Ã©voluer. C&rsquo;est pourquoi on prÃ©fÃ¨rera dÃ©couper son design en modules. Plusieurs mÃ©thodologies existent, mais celle qui fait sens Ã  mes yeux se rapproche de SMACSS. Je vous invite Ã  aller faire un tour sur <a href="https://smacss.com/" target="_blank">leur site</a>, on y apprend des choses trÃ¨s intÃ©ressantes sur les maniÃ¨res possibles de dÃ©couper son design CSS.</p>
<p>La puissance des prÃ©processeurs CSS n&rsquo;est plus Ã  dÃ©montrer : ils nous permettent de s&rsquo;affranchir des prÃ©fixes vendeurs, d&rsquo;apporter de la logique dans nos feuilles de styles, de sÃ©parer proprement notre architecture, bref, de tout calibrer au plus juste sans se rÃ©pÃ©ter. C&rsquo;est la mÃ©thode DRY (Don&rsquo;t repeat yourself). Globalement, on gagne en productivitÃ©, en stabilitÃ©, on limite les rÃ©gressions et en plus on s&rsquo;Ã©clate. Que demander de plus ?</p>
<p><strong>Sass embrasse parfaitement cette philosophie du DRY et de la scalabilitÃ©. Mais pour lâ€™installer sur WordPress comment Ã§a se passe ?</strong></p>
<p>PremiÃ¨rement, il faut avoir dÃ©jÃ  installÃ© et configurÃ© les outils sur sa machine. Dans mon cas, j&rsquo;utilise le framework COMPASS. Il est rÃ©putÃ© pour Ãªtre l&rsquo;un des plus complets avec une palette de mixins trÃ¨s Ã©tendue, et mÃªme si pas mal lui reprochent d&rsquo;Ãªtre assez lourd / lent Ã  la compilation, de mon point de vue c&rsquo;est Ã  la marge. Car si vous n&rsquo;avez jamais utilisÃ© SASS / COMPASS, il faut savoir que le code que vous gÃ©nÃ©rez est compilÃ© Ã  la volÃ©e en fichier css standards.</p>
<p>Je pars du principe que les personnes qui lisent cet articles ont dÃ©jÃ  COMPASS d&rsquo;installÃ© et sont prÃªts Ã  se lancer.</p>
<p>Pour dÃ©marrer le projet (thÃ¨me ou plugin) en mode SASS, il suffit d&rsquo;initialiser un projet COMPASS Ã  la racine. Si je construit un thÃ¨me, j&rsquo;ouvrirai le terminal Ã  la racine de mon thÃ¨me et je taperai :</p>
<p></p><pre class="crayon-plain-tag">compass init</pre><p></p>
<p>A la suite de quoi, je me retrouve avec un fichier config.rb, ainsi que 2 nouveaux dossiers : sass et stylesheets. Le dossier sass est celui dans lequel on va travailler Ã  l&rsquo;avenir, mais avant, il faut aller un peu plus loin :</p>
<p>Les fichiers scss contenu dans le dossier sass vont entrainer la crÃ©ation / modification de leur alter Ã©go css contenu dans le dossier stylesheets, Ã  chaque fois que j&rsquo;ajouterai / modifierai un fichier scss. Je vais donc devoir demander Ã  compass de se mettre en Â«Â Ã©couteÂ Â», de maniÃ¨re Ã  <em>catcher</em> les modifications au fur et Ã  mesure. Je tape donc dans mon terminal, toujours Ã  la racine de mon thÃ¨me :</p>
<p></p><pre class="crayon-plain-tag">compass watch</pre><p></p>
<p>Le watcher est Ã  prÃ©sent en mode Â«Â Ã©couteÂ Â», et toutes les modifications effectuÃ©es dans le dossier sass seront automatiquement compilÃ©es dans le dossier stylesheets. Mais cela ne suffit pas. Il faut dÃ¨s maintenant indiquer Ã  WordPress comment rÃ©cupÃ©rer / lire les fichiers css crÃ©Ã©s.</p>
<p><strong>Voici la logique que j&rsquo;appliqu</strong>e :</p>
<p>Mon fichier style.css Ã  la racine de mon thÃ¨me va dÃ¨s Ã  prÃ©sent me servir de passerelle, en appelant un seul et unique fichier contenu dans le dossier stylesheets. Bien sÃ»r, la crÃ©ation de ce fichier se passe d&rsquo;abord dans le dossier sass : je crÃ©Ã© un fichier nommÃ© Â«Â main.scssÂ Â», et automatiquement, son copain Â«Â main.cssÂ Â» est crÃ©Ã©. Il me suffit alors d&rsquo;importer ce fichier css dans mon Â«Â style.cssÂ Â» :</p>
<p></p><pre class="crayon-plain-tag">@import url(stylesheets/main.css);</pre><p></p>
<p>Mais alors, et les autres fichiers aussi il va falloirÂ  les importer ? Oui et non. En fait ce qu&rsquo;on va faire c&rsquo;est crÃ©er uniquement des fichiers scss qui ne seront pas compilÃ©s en fichiers css. Le but n&rsquo;est pas de remplir le dossier stylesheets, mais de le maintenir avec un seul fichier : notre fameux main.css, et de dire Ã  ce dernier de faire tous les imports des fichiers qu&rsquo;on va crÃ©er par la suite.</p>
<p>Du coup on va prÃ©fixer tous nos nouveux fichiers scss avec un underscore Â«Â _Â Â». Par exemple, si je veux un fichier scss dÃ©diÃ© Ã  la navigation et un autre Ã  mes modules, je vais les nommer respectivement Â«Â _navigation.scssÂ Â» et Â«Â _modules.scssÂ Â». De cette maniÃ¨re je suis tranquille, je sais qu&rsquo;ils ne seront pas compilÃ©s en css. Il ne reste plus qu&rsquo;Ã  les importer dans l&rsquo;ordre qui nous convient, dans le fichier main.scss (qui lui ne possÃ¨de pas d&rsquo;underscore, et est donc compiler en main.css).</p>
<p>Voici ce que j&rsquo;Ã©cris dans mon main.scss :</p>
<p></p><pre class="crayon-plain-tag">@import "compass";
@import "navigation";
@import "modules";</pre><p></p>
<p>PremiÃ¨re chose Ã  noter, j&rsquo;importe les fichiers en les appelant par leur nom, sans l&rsquo;underscore et sans leur extension. C&rsquo;est tout Ã  fait normal. De plus je n&rsquo;utilise pas Â«Â url(nom du fichier)Â Â», je met directement le nom de mon fichier entre guillemets, et c&rsquo;est tout ! L&rsquo;import de Â«Â compassÂ Â» est nÃ©cessaire mais non obligatoire : le fait d&rsquo;utiliser le compilateur de COMPASS ne vous oblige nullement Ã  utiliser les mixins fournies, mais bon, ce serait dommage de se priver <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Pour ma part je recommande de ne pas importer COMPASS entiÃ¨rement, mais de sÃ©lectionner les outils qui vous intÃ©ressent. Je vous laisse jeter un oeil Ã  la <a href="http://compass-style.org/help/" target="_blank">documentation de compass</a> Ã  ce sujet.</p>
<p><strong>Si on rÃ©capitule :</strong></p>
<p>j&rsquo;ai un fichier style.css qui importe le fichier main.css, qui lui mÃªme est issu de la compilation de main.scss, et c&rsquo;est dans main.scss qu&rsquo;on importe autres feuilles de style scss. C&rsquo;est aussi simple que Ã§a ! Les modules importÃ©s sont prÃ©fixÃ©s d&rsquo;un underscore, de maniÃ¨re Ã  ne pas gÃ©nÃ©rer un fichier css pour rien, mais de tout centraliser grÃ¢ce Ã  un seul et unique fichier : main.scss</p>
<p>C&rsquo;est ainsi que je procÃ¨de dans mes projets, une fois que tout est en place, il ne me reste qu&rsquo;Ã  lancer mon watcher et tout se fait dans le dossier sass Ã  la racine du thÃ¨me. On ne peut faire plus simple, enfin pas tant que les navigateurs ne parleront pas autre chose que du css <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Lâ€™article <a rel="nofollow" href="/utiliser-sass-projets-wordpress/">Utiliser SASS dans ses projets WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/utiliser-sass-projets-wordpress/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">456</post-id>	</item>
		<item>
		<title>Filtrer ses portfolios Jetpack grÃ¢ce Ã  Isotope</title>
		<link>/filtrer-ses-portfolios-jetpack-grace-a-isotope/</link>
		<comments>/filtrer-ses-portfolios-jetpack-grace-a-isotope/#respond</comments>
		<pubDate>Tue, 10 Nov 2015 17:18:23 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Plugins]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[isotope]]></category>
		<category><![CDATA[jetpack]]></category>
		<category><![CDATA[portfolio]]></category>

		<guid isPermaLink="false">/?p=450</guid>
		<description><![CDATA[<p>Desire Portfolio Filter est un nouveau plugin qui ajoute Ã  Jetpack les fameux filtres de la librairie javascript Isotope pour trier ses projets de portfolio. Je trouvais que ce qui manquait rÃ©ellement Ã  Jetpack Portfolio, c&#8217;Ã©tait la possibilitÃ© de filtrer ses projets en fonction du type par exemple. Et comme je trouvais dommage d&#8217;installer un &#8230; <a href="/filtrer-ses-portfolios-jetpack-grace-a-isotope/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Filtrer ses portfolios Jetpack grÃ¢ce Ã  Isotope</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/filtrer-ses-portfolios-jetpack-grace-a-isotope/">Filtrer ses portfolios Jetpack grÃ¢ce Ã  Isotope</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Desire Portfolio Filter est un nouveau plugin qui ajoute Ã  Jetpack les fameux filtres de la librairie javascript Isotope pour trier ses projets de portfolio.</p>
<p>Je trouvais que ce qui manquait rÃ©ellement Ã  Jetpack Portfolio, c&rsquo;Ã©tait la possibilitÃ© de filtrer ses projets en fonction du type par exemple. Et comme je trouvais dommage d&rsquo;installer un autre plugin de portfolio juste pour cette featurette, j&rsquo;ai optÃ© pour un plugin maison qui fait appel aux portfolio Jetpack. <strong>Donc vous ne pouvez pas utiliser ce plugin sans Jetpack.</strong></p>
<p>Pour l&rsquo;heure, il utilise un template spÃ©cifique pour l&rsquo;affichage des portfolios, qu&rsquo;il faut choisir sur la page d&rsquo;affichage lors de l&rsquo;Ã©dition, en remplacement de l&rsquo;utilisation du shortcode fourni par automattic. Cela implique que l&rsquo;on n&rsquo;a plus la main sur les portfolios qu&rsquo;on affiche. Mais une version est en cours de dÃ©veloppement afin de rendre Ã  CÃ©sar ce qui est Ã  CÃ©sar, et offrir Ã  nouveau cette possibilitÃ©.</p>
<p>TÃ©lÃ©charger le plugin sur :</p>
<p><a href="https://github.com/neovea/desire-portfolio-filter" target="_blank"><br />
</a><a href="https://github.com/neovea/desire-portfolio-filter" target="_blank"><img class="aligncenter" src="/wp-content/uploads/2015/11/GitHub_Logo-300x123.png" alt="GitHub_Logo" width="163" height="67" /></a></p>
<p>Ou sur :<br />
<a href="https://wordpress.org/plugins/desire-portfolio-filter/" target="_blank"><img class="aligncenter" src="/wp-content/uploads/2015/11/wordpress-logo-hoz-rgb-300x100.jpg" alt="wordpress-logo-hoz-rgb" width="300" height="100" /></a></p>
<p>Je vous laisse dÃ©couvrir et me faire vos retours <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Lâ€™article <a rel="nofollow" href="/filtrer-ses-portfolios-jetpack-grace-a-isotope/">Filtrer ses portfolios Jetpack grÃ¢ce Ã  Isotope</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/filtrer-ses-portfolios-jetpack-grace-a-isotope/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">450</post-id>	</item>
		<item>
		<title>IntÃ©grer des widgets dans ses contenus WordPress</title>
		<link>/integrer-des-widget-dans-ses-contenus-wordpress/</link>
		<comments>/integrer-des-widget-dans-ses-contenus-wordpress/#respond</comments>
		<pubDate>Sun, 01 Nov 2015 21:30:41 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Plugins]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[plugin wordpress]]></category>
		<category><![CDATA[widget]]></category>

		<guid isPermaLink="false">/?p=441</guid>
		<description><![CDATA[<p>Ne vous est-il pas dÃ©jÃ  arrivÃ© de vouloir afficher un ou plusieurs widgets sur une page ou dans un article WordPress ? Ces petites boÃ®tes sont devenues tellement nombreuses et sont si pratiques que ce serait dommage de cantonner leur usage Ã  la sidebar uniquement ğŸ™‚ Aujourd&#8217;hui je vous offre un plugin trÃ¨s simple qui &#8230; <a href="/integrer-des-widget-dans-ses-contenus-wordpress/" class="more-link">Continuer la lecture de <span class="screen-reader-text">IntÃ©grer des widgets dans ses contenus WordPress</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/integrer-des-widget-dans-ses-contenus-wordpress/">IntÃ©grer des widgets dans ses contenus WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Ne vous est-il pas dÃ©jÃ  arrivÃ© de vouloir afficher un ou plusieurs widgets sur une page ou dans un article WordPress ? Ces petites boÃ®tes sont devenues tellement nombreuses et sont si pratiques que ce serait dommage de cantonner leur usage Ã  la sidebar uniquement <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Aujourd&rsquo;hui je vous offre un plugin trÃ¨s simple qui vous permet cela, mais pas que&#8230; <span id="more-441"></span>Je ne trouvais pas chaussure Ã  mon pied, et aucune solution existante ne me sÃ©duisait. J&rsquo;ai donc codÃ© ce petit plugin qui offre deux fonctionnalitÃ©s :</p>
<ol>
<li>Pouvoir ajouter des widgets dans un contenu (page ou article par exemple) via un simple shortcode</li>
<li>Pouvoir afficher une page dans un widget (pratique si l&rsquo;on souhaite faire un design one page)</li>
</ol>
<p>C&rsquo;est la version 1.0, ce qui signifie qu&rsquo;elle est stable bien sÃ»r, mais aussi que pour l&rsquo;instant, il n&rsquo;y a aucune autre fonctionnalitÃ© que celles dÃ©crites plus haut. J&rsquo;ai dÃ©jÃ  une petite liste d&rsquo;amÃ©liorations et d&rsquo;Ã©volutions dans les cartons, so wait (try) and see <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Je ne vous dÃ©cris pas son fonctionnement, je vous laisse dÃ©couvrir Ã§a par vous-mÃªme, car vous verrez c&rsquo;est trÃ¨s simple.</p>
<p>Quelques captures d&rsquo;Ã©cran viendront bientÃ´t, donc en attendant, si vous souhaitez tester l&rsquo;application, rendez-vous sur mon compte GitHub :</p>
<p><a href="https://github.com/neovea/desire-page-widget" target="_blank"><br />
</a><a href="https://github.com/neovea/desire-page-widget" target="_blank"><img class="aligncenter" src="/wp-content/uploads/2015/11/GitHub_Logo-300x123.png" alt="GitHub_Logo" width="163" height="67" /></a>Ou sur wordpress.org :</p>
<p><a href="https://wordpress.org/plugins/desire-page-widget/" target="_blank"><img class="aligncenter" src="/wp-content/uploads/2015/11/wordpress-logo-hoz-rgb-300x100.jpg" alt="wordpress-logo-hoz-rgb" width="300" height="100" /></a></p>
<p>N&rsquo;hÃ©sitez pas Ã  me faire vos retours sur mon compte GitHub ou dans les commentaires. Merci <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Lâ€™article <a rel="nofollow" href="/integrer-des-widget-dans-ses-contenus-wordpress/">IntÃ©grer des widgets dans ses contenus WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/integrer-des-widget-dans-ses-contenus-wordpress/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">441</post-id>	</item>
		<item>
		<title>Tutoriel &#8211; Installer WordPress MultiSite et cloner son instance de site maÃ®tre</title>
		<link>/multisite-wordpress-facile/</link>
		<comments>/multisite-wordpress-facile/#comments</comments>
		<pubDate>Mon, 13 Jul 2015 07:00:59 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Tutoriels]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[MultiSite]]></category>

		<guid isPermaLink="false">/?p=351</guid>
		<description><![CDATA[<p>Faire du MultiSite sous WordPress est trÃ¨s facile, mais demande tout de mÃªme un peu de rÃ©flexion avant de se lancer dans la bataille. Par ailleurs quand on souhaite des instances identiques en termes de structure et de contenu, Ã§a peut vite devenir rÃ©barbatif. Mais comme toujours, il y a une extension pour Ã§a !PremiÃ¨re &#8230; <a href="/multisite-wordpress-facile/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Tutoriel &#8211; Installer WordPress MultiSite et cloner son instance de site maÃ®tre</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/multisite-wordpress-facile/">Tutoriel &#8211; Installer WordPress MultiSite et cloner son instance de site maÃ®tre</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Faire du MultiSite sous WordPress est trÃ¨s facile, mais demande tout de mÃªme un peu de rÃ©flexion avant de se lancer dans la bataille. Par ailleurs quand on souhaite des instances identiques en termes de structure et de contenu, Ã§a peut vite devenir rÃ©barbatif. Mais comme toujours, il y a une extension pour Ã§a !<span id="more-351"></span><strong>PremiÃ¨re question Ã  se poser</strong> : sous-domaines ou sous-rÃ©pertoires ? Ceci dÃ©pend de votre projet et de ses objectifs. En ce qui me concerne, je travail surtout en sous-domaines.</p>
<p><strong>Ensuite vient la question de l&rsquo;organisation du travail Ã  effectuer</strong> : si tous vos sites se ressemblent en termes de structure et de contenu, autant ne pas se fouler et utiliser un outil qui va industrialiser tout Ã§a pour vous : <a href="https://wordpress.org/plugins/multisite-clone-duplicator/" target="_blank">MultiSite Clone Duplicator</a>. L&rsquo;idÃ©e de base est simple, on fait son site Â«Â maÃ®treÂ Â», on active le multi, et on duplique.</p>
<h2>Etape 1 : la crÃ©ation du site maÃ®tre et l&rsquo;activation de WordPress MultiSite</h2>
<p>On commence par crÃ©er sa premiÃ¨re instance de site, et on active le multi en ajoutant Ã  wp-config.php la ligne</p>
<p></p><pre class="crayon-plain-tag">define( 'WP_ALLOW_MULTISITE', true );</pre><p></p>
<p>juste au dessus du commentaire</p>
<p></p><pre class="crayon-plain-tag">/* C'est tout, ne touchez pas Ã  ce qui suit ! Bon blogging ! */</pre><p></p>
<p>A partir de lÃ , on se connecte Ã  l&rsquo;administration, et sous le menu Â«Â OutilsÂ Â», une nouvelle entrÃ©e Â«Â CrÃ©ation du rÃ©seauÂ Â» apparaÃ®t.</p>
<p><a href="/wp-content/uploads/2015/07/creation_reseau.png"><img class="aligncenter" src="/wp-content/uploads/2015/07/creation_reseau.png" alt="creation_reseau" /></a></p>
<p>Avant de cliquer, dÃ©sactivez tous les plugins, ceci est impÃ©ratif, sans quoi, vous ne pourrez pas poursuivre la configuration. A noter au passage que toute action sur un site au sein du rÃ©seau, nÃ©cessite que les plugins soient dÃ©sactivÃ©s sous peine de voir apparaÃ®tre des bugs.</p>
<p>Vous arrivez ensuite sur la page de configuration oÃ¹ l&rsquo;on vous demande de choisir entre sous-domaines ou sous-dossiers. C&rsquo;est Ã  vous de voir. Pour mes besoins, ce sera en sous-domaines. Vous n&rsquo;avez qu&rsquo;Ã  suivre Ã  la lettre les indications de cette page et de la suivante pour procÃ©der en bonne et due forme Ã  l&rsquo;activation de votre rÃ©seau.</p>
<p><a href="/wp-content/uploads/2015/07/config_reseau.png"><img class="aligncenter" src="/wp-content/uploads/2015/07/config_reseau.png" alt="config_reseau" width="685" height="321" /></a></p>
<p>Avant de modifier vos fichiers .htaccess et wp-config.php comme demandÃ© Ã  l&rsquo;Ã©tape suivante, je vous recommande de vous en faire une sauvegarde, <em>just in case</em> <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Une fois que les modifications sont faites, il vous suffit de vous reconnecter et d&rsquo;admirer votre nouveau menu d&rsquo;administration de rÃ©seau.</p>
<p><a href="/wp-content/uploads/2015/07/admin_reseau.png"><img class="aligncenter" src="/wp-content/uploads/2015/07/admin_reseau.png" alt="admin_reseau" /></a></p>
<p>VoilÃ  ! Vous n&rsquo;avez plus rien Ã  configurer, si ce n&rsquo;est votre site maÃ®tre. Car votre installation est encore toute fraÃ®che, il vous faut l&rsquo;alimenter, la paramÃ©trer, crÃ©er vos <em>users</em> ainsi que vos pages principales.</p>
<h2>Etape 2 : Cloner son site maÃ®tre et crÃ©er un site enfant en sous-domaine</h2>
<p>Cette Ã©tape consiste Ã  dupliquer son site maÃ®tre ainsi que tous ses rÃ©glages, contenus, utilisateurs vers une instance MultiSite. Ceci peut Ãªtre assez pratique quand on a des sites dont la configuration est les contenus sont similaires, ou qu&rsquo;on utilise des shortcodes pour structurer ses pages. Il suffit d&rsquo;installer le plugin <a href="https://wordpress.org/plugins/multisite-clone-duplicator/" target="_blank">MultiSite Clone Duplicator</a> qui, comme son nom l&rsquo;indique, va crÃ©er pour vous vos instances avec les sous domaines qui vont bien, tout en dupliquant vos donnÃ©es d&rsquo;un site vers l&rsquo;autre. Son utilisation et sa fiabilitÃ© font de ce plugin un must have quand on fait du MultiSite.</p>
<p>Pour installer le plugin, vous ne passez plus par le menu habituel, mais par le menu de Â«Â Mes sitesÂ Â» &gt; Â«Â Admin du rÃ©seauÂ Â» &gt; Â«Â ExtensionsÂ Â». En effet les plugins et les thÃ¨mes sont des ressources partagÃ©es entre tous vos sites, que vous installez de maniÃ¨re globale. Mais rassurez vous, leur activation sur vos diffÃ©rents sites sont tout Ã  fait libres. Installez donc ce plugin et cliquez sur Â«Â Activer sur le rÃ©seauÂ Â», ce qui le rendra disponible pour tous vos sites. Une fois activÃ©, une nouvelle entrÃ©e fait son apparition dans le menu d&rsquo;admin du rÃ©seau.</p>
<p><a href="/wp-content/uploads/2015/07/duplication_reseau.png"><img class="aligncenter" src="/wp-content/uploads/2015/07/duplication_reseau.png" alt="duplication_reseau" /></a></p>
<p>La page d&rsquo;option est trÃ¨s simple et vous demandera le sous-domaine souhaitÃ© (si c&rsquo;est l&rsquo;option que vous avez choisie), le titre du nouveau site ainsi que le mail du nouvel administrateur. Vous pourrez Ã©galement choisir si vous souhaitez conserver les utilisateurs et rÃ´les du site dupliquÃ©, copier les fichiers du rÃ©pertoire d&rsquo;upload, voire sauvegarder les logs dans un rÃ©pertoire du plugin.</p>
<p>Et c&rsquo;est tout ! Reste qu&rsquo;Ã  appuyer sur le bouton <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><strong>Nota Bene : Le Multi ne nous dispense pas de la crÃ©ation de nos vhosts pour rendre nos instances accessibles, mais Ã§a c&rsquo;est une autre histoire !</strong></p>
<p>C&rsquo;est Ã  peu prÃ¨s tout, je ne suis pas trop rentrÃ© dans les dÃ©tails car je souhaitais que ce petit tuto reste simple et accessible, mais je posterai d&rsquo;autres articles connexes au sujet de WordPress MultiSite. N&rsquo;hÃ©sitez pas Ã  venir discuter si le sujet vous intÃ©resse ou que certaines choses ne sont pas claires.</p>
<p>Lâ€™article <a rel="nofollow" href="/multisite-wordpress-facile/">Tutoriel &#8211; Installer WordPress MultiSite et cloner son instance de site maÃ®tre</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/multisite-wordpress-facile/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">351</post-id>	</item>
		<item>
		<title>Outil &#8211; Scanner de vulnÃ©rabilitÃ©s WordPress</title>
		<link>/trouver-vulnerabilites-wordpress/</link>
		<comments>/trouver-vulnerabilites-wordpress/#respond</comments>
		<pubDate>Tue, 05 Aug 2014 13:16:58 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Outils]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[faille]]></category>
		<category><![CDATA[securitÃ©]]></category>
		<category><![CDATA[wpscan]]></category>

		<guid isPermaLink="false">/?p=221</guid>
		<description><![CDATA[<p>Bonjour, retour de vacances pour moi, et le moment de faire le point sur les projets en cours et faire un peu de mÃ©nage dans ceux passÃ©s. Du coup je me penche sur la sÃ©curitÃ©. Et Ã  ce propos, je viens de dÃ©couvrir un outil fort pratique pour dÃ©celer les vulnÃ©rabilitÃ©s d&#8217;un site WordPress. Il &#8230; <a href="/trouver-vulnerabilites-wordpress/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Outil &#8211; Scanner de vulnÃ©rabilitÃ©s WordPress</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/trouver-vulnerabilites-wordpress/">Outil &#8211; Scanner de vulnÃ©rabilitÃ©s WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Bonjour, retour de vacances pour moi, et le moment de faire le point sur les projets en cours et faire un peu de mÃ©nage dans ceux passÃ©s. Du coup je me penche sur la sÃ©curitÃ©. Et Ã  ce propos, je viens de dÃ©couvrir un outil fort pratique pour dÃ©celer les vulnÃ©rabilitÃ©s d&rsquo;un site WordPress.<span id="more-221"></span></p>
<p>Il s&rsquo;agit de WpScan. Tout en ruby, il sâ€™installe sur une machine Linux. Tout site WP peut Ãªtre scanner. Ce qui fait de cet outil un joujou de choix pour les hackers potentiels. Je lâ€™ai installÃ© sur mon serveur pour tester, et câ€™est plutÃ´t efficace. De plus toutes les failles quâ€™il remonte sont documentÃ©es avec plusieurs sources. Bravo aux dÃ©veloppeurs de cette perleÂ !</p>
<p>Je vous encourage Ã  le tester. Voici le site ainsi que leur GitHub :</p>
<p><a href="http://wpscan.org/">http://wpscan.org/</a></p>
<p><a href="https://github.com/wpscanteam/wpscan">https://github.com/wpscanteam/wpscan</a></p>
<p>Si vous aussi connaissez des outils similaires, n&rsquo;hÃ©sitez surtout pas Ã  les partager !</p>
<p>A+</p>
<p>Lâ€™article <a rel="nofollow" href="/trouver-vulnerabilites-wordpress/">Outil &#8211; Scanner de vulnÃ©rabilitÃ©s WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/trouver-vulnerabilites-wordpress/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">221</post-id>	</item>
		<item>
		<title>Tutoriel &#8211; Optimiser WordPress pour les performances</title>
		<link>/optimiser-wordpress/</link>
		<comments>/optimiser-wordpress/#respond</comments>
		<pubDate>Sat, 12 Jul 2014 11:21:40 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Tutoriels]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[cache]]></category>
		<category><![CDATA[vitesse de chargement]]></category>

		<guid isPermaLink="false">/?p=209</guid>
		<description><![CDATA[<p>Au sein de la famille des CMS, WordPress a plutÃ´t mauvaise rÃ©putation. L&#8217;Ã©volution de son code pour le faire passer de plate forme de blogging pur Ã  l&#8217;Ã©tat de vÃ©ritable CMS a Ã©tÃ© (et est encore) laborieuse. Chaque version amÃ¨ne son lot de petites nouveautÃ©s, de fonctionnalitÃ©s qui mises bout Ã  bout sans une vÃ©ritable &#8230; <a href="/optimiser-wordpress/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Tutoriel &#8211; Optimiser WordPress pour les performances</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/optimiser-wordpress/">Tutoriel &#8211; Optimiser WordPress pour les performances</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Au sein de la famille des CMS, WordPress a plutÃ´t mauvaise rÃ©putation. L&rsquo;Ã©volution de son code pour le faire passer de plate forme de blogging pur Ã  l&rsquo;Ã©tat de vÃ©ritable CMS a Ã©tÃ© (et est encore) laborieuse. Chaque version amÃ¨ne son lot de petites nouveautÃ©s, de fonctionnalitÃ©s qui mises bout Ã  bout sans une vÃ©ritable refonte de son coeur, ont contribuÃ© Ã  la dÃ©gradation de ses performances. TrÃ¨s rÃ©cemment j&rsquo;ai du me pencher pour les besoins d&rsquo;un projet, sur les moyens Ã  disposition afin d&rsquo;augmenter les performances de WordPress. Et je peux vous dire que les solutions existent bel et bien. Je vous expose ici mon expÃ©rience.</p>
<p><span id="more-209"></span>Il est de notoriÃ©tÃ© publique qu&rsquo;un site qui met du temps Ã  s&rsquo;afficher pose 2 problÃ¨mes majeurs :</p>
<p>*Les visiteurs fuient<br />
*Les moteurs de recherche pÃ©nalisent le site</p>
<p>Les deux combinÃ©s contribuent Ã  une dÃ©gradation notable du nombre de visites, une explosion du taux de rebond, et une mauvaise rÃ©putation.</p>
<h3>Petit Ã©tat des lieux</h3>
<p>Un site c&rsquo;est avant tout un ensemble de ressources qui sont servies aux visiteurs. Ca comprend des donnÃ©es bien sÃ»r, des feuilles de style CSS pour rendre le tout visuellement agrÃ©able Ã  lire, et du javascript trÃ¨s souvent qui permet d&rsquo;apporter des fonctionnalitÃ©s souvent discutables. Toutes ces ressources demandent de la bande passante et de la mÃ©moire. La maÃ®trise de ces deux facteurs est la clÃ© vers l&rsquo;optimisation dÂ Â»un site de maniÃ¨re gÃ©nÃ©ral, et tout particuliÃ¨rement avec WordPress.</p>
<h3>PremiÃ¨re Ã©tape : Faire du mÃ©nage</h3>
<p>La question qu&rsquo;il faut toujours se poser et garder Ã  l&rsquo;esprit est la suivante :</p>
<p style="text-align: center;">*est-ce que cette fonctionnalitÃ© sert le contenu (et par extension, les visiteurs) ?*</p>
<p style="text-align: left;">Ca peut paraÃ®tre bÃªte dit comme Ã§a, mais on a trop souvent tendance Ã  rajouter des fonctionnalitÃ©s pas toujours utiles Ã  WordPress par l&rsquo;intermÃ©diaire des extensions. Et c&rsquo;est comprÃ©hensible, avec plus de 32 000 plugins dispos sur le dÃ©pÃ´t officiel, c&rsquo;est tentant. Alors on arrÃªte les frais et on ne garde/installe que ce dont on a besoin. Une extension doit Ãªtre pertinente et apporter une vraie plu-value Ã  votre contenu. A titre d&rsquo;exemple, sur <a href="/">/</a> j&rsquo;ai en tout et pour tout 6 extensions installÃ©es :</p>
<p style="text-align: left;">Akismet<br />
Contact Form 7<br />
Crayon Syntax Highlighter<br />
WP-SEO<br />
Jetpack par WordPress.com<br />
WP Rocket</p>
<p style="text-align: left;">Et honnÃªtement je n&rsquo;ai pas besoin de plus. Ces 6 extensions rÃ©pondent Ã  l&rsquo;ensemble de mes besoins. Pareil pour les bibliothÃ¨ques javascript, souvent activÃ©es par dÃ©faut dans votre thÃ¨me. Sachez que mÃªme si vous ne les utilisez pas, elles se chargent en mÃªme temps que votre page. A dÃ©faut de les supprimer, mettez les au moins en commentaire dans votre code afin de pouvoir y revenir si besoin.</p>
<h3 style="text-align: left;">Externaliser les ressources</h3>
<p>Les CDN (content delivery network), Ã§a vous parle ? Ce sont des serveurs tiers qui hÃ©bergent tout type de ressource comme du javascript, vos images ou vos vidÃ©os. Pourquoi faire appel Ã  un CDN ? Pour Ã©conomiser votre bande passante, tout simplement. Exemple, un fichier javascript qui pÃ¨se 40ko et qui se charge sur chaque page et pour chaque visiteur, Ã§a peut vite chiffrer quand on en a une bonne dizaine. Alors pourquoi ne pas libÃ©rer cette bande passante pour vos contenus et laisser d&rsquo;autres faire le sale boulot Ã  la place de votre site ?</p>
<p>Quelques exemples de CDN :</p>
<p><a href="www.jsdelivr.com">www.jsdelivr.com<br />
developers.google.com</a><br />
<a href="http://www.maxcdn.com/">www.maxcdn.com</a></p>
<p>Il en existe des centaines, voire des milliers. MÃªme les bibliothÃ¨ques javascript les plus populaires possÃ¨dent leur propre CDN. Si vous utilisez un framewwork comme Bootstrap ou les icÃ´nes de fontawesome, vous y avez droit. Pourquoi se priver ?</p>
<h3>AllÃ©ger vos pages de leurs <del>gadgets</del> widgets</h3>
<p>Un petit encart pour le partage ici, les derniers articles par lÃ , les archives par ci&#8230; Stop ! Les visiteurs s&rsquo;en tapent. S&rsquo;ils veulent trouver quelque chose, ils utiliseront la fonction recherche et la taxonomie prÃ©sente sur votre site. Et s&rsquo;ils veulent partager vos contenus, ils le feront sans l&rsquo;aide de vos boutons. Au passage Ã§a Ã©vite de nuire Ã  la lecture de vos contenus.</p>
<h3>Jouer Ã  cache cache</h3>
<p>WordPress permet d&rsquo;utiliser la mise en cache de vos contenus. ConcrÃ¨tement, un contenu qui a dÃ©jÃ  Ã©tÃ© visite est servi directement de maniÃ¨re statique aux autres visiteurs. On Ã©vite les requÃªtes en base de donnÃ©e, ce qui n&rsquo;est pas un mal avec WordPress quand on sait qu&rsquo;il n&rsquo;utilise pas encore PDO MySql. Je crois pouvoir dire sans me tromper de beaucoup que c&rsquo;est la fonctionnalitÃ© la plus intÃ©ressante Ã  votre disposition. Le hic, c&rsquo;est que pour en profiter, il faut un plugin. Et lÃ , on a l&#8217;embarras du choix. En ce qui me concerne, j&rsquo;en ai testÃ© plusieurs, et mon choix s&rsquo;est arrÃªtÃ© sur <a href="http://wp-rocket.me/fr/">WP-Rocket</a>. A ce jour, c&rsquo;est Ã  mon avis la solution la plus aboutie, lÃ©gÃ¨re et complÃ¨te en plus d&rsquo;Ãªtre extrÃªmement simple Ã  mettre en place. Parmi les options que cette extension propose : lazy loading, minification des css, html et javascripts, et bien d&rsquo;autres fonctionnalitÃ©s bien sympa. A 29,00â‚¬ le plugin, c&rsquo;est du pain bÃ©ni et une vÃ©ritable cure de jouvence pour WordPress. Un vrai investissement quoi ! Sinon, parmi les gratuits, je recommanderais <a href="https://wordpress.org/plugins/w3-total-cache/">W3 Total Cache</a>.</p>
<h3>Minification</h3>
<p>La minification c&rsquo;est le fait de mettre tous ses fichiers de ressources css, js, html bout Ã  bout et au kilomÃ¨tre afin de se charger plus vite. Ce n&rsquo;est pas un gadget mais un vÃ©ritable outil. AjoutÃ© Ã  la mise en cache, ce sont des performances accrues pour votre site et une meilleure disponibilitÃ© de vos contenus. Wp-Rocket inclut cette fonctionnalitÃ©, mais si vous recherchez un plugin gratuit : <a href="https://wordpress.org/plugins/bwp-minify/">Better WordPress Minify</a>.</p>
<h3>Compression des donnÃ©es</h3>
<p>Encore une vÃ©ritable optimisation. Probablement l&rsquo;une des plus importantes avec la mise en cache. Il s&rsquo;agit de servir Ã  vos visiteurs des contenus compressÃ©s. Cette manipulation n&rsquo;est pas triviale et s&rsquo;effectue cÃ´tÃ© serveur, Ã  condition d&rsquo;avoir les bons modules apache activÃ©s et les bonnes directives dans votre fichier .htaccess. Je ne m&rsquo;Ã©talerai pas sur ce sujet, car d&rsquo;autres sites bien plus spÃ©cialisÃ©s sauront le faire mieux que moi. Je vous donne tout de mÃªme un lien : <a href="http://www.alsacreations.com/article/lire/914-compression-pages-html-css-gzip-deflate.html">www.alsacreations.com</a>. Ceci est Ã©galement proposÃ© en standard par WP-Rocket (je vous l&rsquo;ai dit c&rsquo;est une petite bombe :p)</p>
<h3>MaÃ®triser son image</h3>
<p>Aujourd&rsquo;hui WordPress propose un outil pour la gestion des mÃ©dias qui a bien Ã©voluÃ© avec le temps. Beaucoup de tÃ¢ches sont dÃ©sormais possibles au travers de l&rsquo;interface offerte. Mais n&rsquo;oubliez pas qu&rsquo;une image destinÃ©e au web n&rsquo;est par dÃ©faut pas destinÃ©e Ã  Ãªtre imprimÃ©e. Donc on reste dans les standards du web et on optimise le poids des images en ajustant leur taille et leur rÃ©solution avant de les importer de prÃ©fÃ©rence. Une image trop grande et de trop grande rÃ©solution ne sert Ã  rien sur le net. 72dpi pour la rÃ©solution et 1024px de large maximum me semblent Ãªtre un bon dÃ©but. Au passage, pensez Ã  bien nommer vos images avant import, pour le SEO, Ã§a compte !</p>
<h3>Mais que fait la police ?</h3>
<p>Avant on n&rsquo;avait pas le choix pour les typos de son site : Arial, Times New Roman etc Ã©taient les standards tristement incontournables. Aujourd&rsquo;hui ce n&rsquo;est plus le cas et on peut vraiment se lÃ¢cher. Du coup on fait un peu n&rsquo;importe quoi en servant des polices pas du tout optimisÃ©es pour le net. LÃ  aussi il y a des services qui vous proposent des typos et ce sans trop alourdir votre site. Vous n&rsquo;avez plus besoin de choisir entre rapiditÃ© et esthÃ©tique. Mon prÃ©fÃ©rÃ© est <a href="http://www.fontsquirrel.com/">www.fontsquirrel.com</a> avec une plÃ©thore de fonts disponibles et gratuites, des packs webfont prÃªt Ã  l&#8217;emploi, et mÃªme un webfont generator. Sinon il y a <a href="https://www.google.com/fonts">www.google.com/fonts</a>. Pas mon prÃ©fÃ©rÃ©, mais il fait le job. Alors on arrÃªte d&rsquo;importer des fonts qui pÃ¨sent un Ã¢ne mort comme des bourrins <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<h3>Conclusion</h3>
<p>J&rsquo;ai volontairement Ã©tÃ© succinct en vous donnant toutes les pistes exploitables pour optimiser votre WordPress, car je n&rsquo;ai pas la prÃ©tention d&rsquo;Ãªtre expert dans ce domaine. Mais ces pistes doivent Ãªtre Ã  mon avis un point de dÃ©part vers l&rsquo;optimisation. Et ne jamais perdre de vue que ce qui prime sur un site c&rsquo;est son contenu. Et que ces optimisations doivent Ãªtre Ã  son service. Je vous donne encore quelques liens utiles avant de vous quitter ainsi que ceux dont je vous ai parlÃ© dans cet article, histoire de pas vous laisser sur votre faim <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Si vous avez des remarques ou des idÃ©es et astuces pour amÃ©liorer les performances de votre site WordPress, ou que vous pensez qu&rsquo;il manque quelque chose dans la liste, venez en discuter via les commentaires <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<h4>Tester les performances de votre site et savoir ce qui cloche :</h4>
<p><a href="https://developer.yahoo.com/yslow/">https://developer.yahoo.com/yslow/ (extension pour navigateur)</a></p>
<p><a href="https://developers.google.com/speed/pagespeed/">https://developers.google.com/speed/pagespeed/</a></p>
<p><a href="http://tools.pingdom.com/fpt/">http://tools.pingdom.com/fpt/</a></p>
<p><a href="http://gtmetrix.com/">http://gtmetrix.com/</a></p>
<h4>Les plugins qui passent bien :</h4>
<p><a href="http://wp-rocket.me/fr/">http://wp-rocket.me/fr/</a></p>
<p><a href="https://wordpress.org/plugins/w3-total-cache/">https://wordpress.org/plugins/w3-total-cache/</a></p>
<p><a href="https://wordpress.org/plugins/bwp-minify/">https://wordpress.org/plugins/bwp-minify/</a></p>
<p><a href="https://wordpress.org/plugins/p3-profiler/">https://wordpress.org/plugins/p3-profiler/</a> (pas mal pour voir quels sont les plugins qui mangent vos performances)</p>
<h4>Les CDN</h4>
<p><a href="www.jsdelivr.com">www.jsdelivr.com</a></p>
<p><a href="https://developers.google.com/speed/libraries/devguide?hl=fr">developers.google.com</a></p>
<p><a href="http://www.maxcdn.com/">www.maxcdn.com</a></p>
<p>Lâ€™article <a rel="nofollow" href="/optimiser-wordpress/">Tutoriel &#8211; Optimiser WordPress pour les performances</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/optimiser-wordpress/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">209</post-id>	</item>
		<item>
		<title>Astuce &#8211; Appliquer des permissions Ã  un ensemble de fichiers et dossiers de maniÃ¨re rÃ©cursive dans WordPress</title>
		<link>/wordpress-appliquer-permissions-fichiers-dossiers-maniere-recursive/</link>
		<comments>/wordpress-appliquer-permissions-fichiers-dossiers-maniere-recursive/#respond</comments>
		<pubDate>Thu, 03 Jul 2014 09:18:55 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Drupal]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[permissions]]></category>

		<guid isPermaLink="false">/?p=190</guid>
		<description><![CDATA[<p>Sur WordPress, mais aussi sur Drupal et d&#8217;autres CMS les fichiers doivent avoir des permissions spÃ©cifiques. Inutile de se fouler Ã  les appliquer pour chaque dossier quand on peut appliquer des permissions Ã  un ensemble de fichiers et dossiers de maniÃ¨re rÃ©cursive en 2 lignes de commande.L&#8217;exemple suivant s&#8217;applique Ã  WordPress, mais peut tout autant &#8230; <a href="/wordpress-appliquer-permissions-fichiers-dossiers-maniere-recursive/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Astuce &#8211; Appliquer des permissions Ã  un ensemble de fichiers et dossiers de maniÃ¨re rÃ©cursive dans WordPress</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/wordpress-appliquer-permissions-fichiers-dossiers-maniere-recursive/">Astuce &#8211; Appliquer des permissions Ã  un ensemble de fichiers et dossiers de maniÃ¨re rÃ©cursive dans WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Sur WordPress, mais aussi sur Drupal et d&rsquo;autres CMS les fichiers doivent avoir des permissions spÃ©cifiques. Inutile de se fouler Ã  les appliquer pour chaque dossier quand on peut appliquer des permissions Ã  un ensemble de fichiers et dossiers de maniÃ¨re rÃ©cursive en 2 lignes de commande.<span id="more-190"></span>L&rsquo;exemple suivant s&rsquo;applique Ã  WordPress, mais peut tout autant l&rsquo;Ãªtre Ã  vos autres projets</p>
<p></p><pre class="crayon-plain-tag">sudo find wordpress/ -type d -exec chmod 755 {} \;
sudo find wordpress/ -type f -exec chmod 644 {} \;
sudo find wordpress/wp-config.php -type f -exec chmod 444 {} \;</pre><p></p>
<h3>Explications :</h3>
<p><strong>find</strong> : c&rsquo;est la fonction de recherche<br />
<strong>wordpress/</strong> : c&rsquo;est le rÃ©pertoire Ã  partir duquel chercher<br />
<strong>-type</strong> : le type avec en argumentÂ  Â«Â fÂ Â» pour Â«Â folderÂ Â» et Â«Â dÂ Â» pour Â«Â documentÂ Â»-exec : prÃ©cise qu&rsquo;on va exÃ©cuter quelque chose pour les fichiers ou dossiers rencontrÃ©s<br />
<strong>chmod</strong> : la commande pour changer les droits<br />
<strong>755</strong> : permission pour les dossiers<br />
<strong>644</strong> : permission pour les fichiers<br />
<strong>444</strong> : permission pour les fichiers de configuration sensibles (qui contiennent vos identifiants mysql par exemple)</p>
<p>Il va de soit que vous appliquez les permissions que vous voulez <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Lâ€™article <a rel="nofollow" href="/wordpress-appliquer-permissions-fichiers-dossiers-maniere-recursive/">Astuce &#8211; Appliquer des permissions Ã  un ensemble de fichiers et dossiers de maniÃ¨re rÃ©cursive dans WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/wordpress-appliquer-permissions-fichiers-dossiers-maniere-recursive/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">190</post-id>	</item>
		<item>
		<title>Ajouter une classe css personnalisÃ©e aux articles WordPress</title>
		<link>/ajouter-une-classe-personnalisee-aux-articles-wordpress/</link>
		<comments>/ajouter-une-classe-personnalisee-aux-articles-wordpress/#comments</comments>
		<pubDate>Sun, 08 Dec 2013 13:25:03 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Php]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[hook]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[wordpress]]></category>

		<guid isPermaLink="false">/?p=17</guid>
		<description><![CDATA[<p>J&#8217;ai travaillÃ© rÃ©cemment sur un petit plugin WordPress dans lequel je voulais ajouter une image au niveau des titres d&#8217;article. J&#8217;ai voulu ajouter via mon plugin, une classe html personnalisÃ©e pour pouvoir cibler tous mes articles, peu importe la version de WordPress utilisÃ©e, et ce, sans passer par jQuery. Mais comment faire ? L&#8217;astuce est &#8230; <a href="/ajouter-une-classe-personnalisee-aux-articles-wordpress/" class="more-link">Continuer la lecture de <span class="screen-reader-text">Ajouter une classe css personnalisÃ©e aux articles WordPress</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/ajouter-une-classe-personnalisee-aux-articles-wordpress/">Ajouter une classe css personnalisÃ©e aux articles WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>J&rsquo;ai travaillÃ© rÃ©cemment sur un petit plugin WordPress dans lequel je voulais ajouter une image au niveau des titres d&rsquo;article. J&rsquo;ai voulu ajouter via mon plugin, une classe html personnalisÃ©e pour pouvoir cibler tous mes articles, peu importe la version de WordPress utilisÃ©e, et ce, sans passer par jQuery. Mais comment faire ?<span id="more-17"></span></p>
<h3>L&rsquo;astuce est trÃ¨s simple en fait <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></h3>
<p>Dans le script de mon plugin j&rsquo;ai rajoutÃ© ce petit bout de code :</p>
<p></p><pre class="crayon-plain-tag">function fp_add_custom_post_class($classes) {
    $classes[] = 'test-class';
    return $classes;
}
add_filter('post_class','fp_add_custom_post_class');</pre><p></p>
<p>Et le tour est jouÃ©, tous mes articles hÃ©riteront de ma nouvelle classe perso.<br />
C&rsquo;est propre, efficace et lÃ©ger <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="ğŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Par extension, on peut appliquer Ã§a au body avec le hook body_class.</p>
<p>Lâ€™article <a rel="nofollow" href="/ajouter-une-classe-personnalisee-aux-articles-wordpress/">Ajouter une classe css personnalisÃ©e aux articles WordPress</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/ajouter-une-classe-personnalisee-aux-articles-wordpress/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">17</post-id>	</item>
		<item>
		<title>RÃ©soudre le conflit entre Google XML Sitemap et Contact Form</title>
		<link>/resoudre-le-conflit-entre-google-xml-sitemap-et-contact-form/</link>
		<comments>/resoudre-le-conflit-entre-google-xml-sitemap-et-contact-form/#respond</comments>
		<pubDate>Thu, 28 Nov 2013 09:45:04 +0000</pubDate>
		<dc:creator><![CDATA[Franck]]></dc:creator>
				<category><![CDATA[Php]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[wordpress]]></category>

		<guid isPermaLink="false">/?p=5</guid>
		<description><![CDATA[<p>Aujourd&#8217;hui, j&#8217;ai dÃ©couvert qu&#8217;un conflit pouvait apparaÃ®tre entre les plugins WordPress Google XML Sitemap et Contact Form 7. En tentant d&#8217;accÃ©der au sitemap.xml, j&#8217;obtenais cette erreur : This page contains the following errors: error on line 11 at column 67: EntityRef: expecting &#8216;;&#8217; Below is a rendering of the page up to the first error. &#8230; <a href="/resoudre-le-conflit-entre-google-xml-sitemap-et-contact-form/" class="more-link">Continuer la lecture de <span class="screen-reader-text">RÃ©soudre le conflit entre Google XML Sitemap et Contact Form</span></a></p>
<p>Lâ€™article <a rel="nofollow" href="/resoudre-le-conflit-entre-google-xml-sitemap-et-contact-form/">RÃ©soudre le conflit entre Google XML Sitemap et Contact Form</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>Aujourd&rsquo;hui, j&rsquo;ai dÃ©couvert qu&rsquo;un conflit pouvait apparaÃ®tre entre les plugins WordPress Google XML Sitemap et Contact Form 7. En tentant d&rsquo;accÃ©der au sitemap.xml, j&rsquo;obtenais cette erreur :<span id="more-5"></span></p>
<blockquote>
<h3>This page contains the following errors:</h3>
<div>error on line 11 at column 67: EntityRef: expecting &lsquo;;&rsquo;</div>
<h3>Below is a rendering of the page up to the first error.</h3>
</blockquote>
<p>Cette erreur est dÃ»e au Â«Â &amp;Â Â» interprÃ©tÃ© comme un caractÃ¨re html spÃ©cial auquel il manque le Â«Â ;Â Â» de fin.</p>
<h3>La solution</h3>
<p>Pour corriger ce souci, il suffit d&rsquo;Ã©diter le code source de Google XML Sitemap, de repÃ©rer la derniÃ¨re condition if et la modifier comme suit :</p>
<p></p><pre class="crayon-plain-tag">if ( ! empty( $post-&gt;post_title ) &amp;&amp; ( get_post_type( $post-&gt;ID ) != "wpcf7_contact_form" ) ) {
    $xml .= "\t\n";
    $xml .= "\t\t" . get_permalink( $post-&gt;ID ) . "\n";
    $xml .= "\t\t" . mysql2date( 'Y-m-d\TH:i:s+00:00', $post-&gt;post_modified_gmt, false ) . "\n";
    $xml .= "\t\t" . 'weekly' . "\n";
    $xml .= "\t\t" . '0.8' . "\n";
    $xml .= "\t\n";
}</pre><p></p>
<p>Cela supprimera tout bonnement la rÃ©fÃ©rence inutile <img src="https://s.w.org/images/core/emoji/2.4/72x72/1f642.png" alt="ğŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /><br />
Solution trouvÃ©e sur <a title="Google XML Sitemap erroring due to Contact Form 7" href="http://wordpress.org/support/topic/google-xml-sitemap-erroring-due-to-contact-form-7" target="_blank">http://wordpress.org/support/topic/google-xml-sitemap-erroring-due-to-contact-form-7</a></p>
<p><strong>EDIT</strong> : Depuis je suis passÃ© Ã  WordPress SEO by Yoast, il s&rsquo;agit d&rsquo;un plugin qui comme son nom l&rsquo;indique apporte toutes les fonctionnalitÃ©s SEO qu&rsquo;on peut attendre, dont la gestion de sitemap. Du coup plus de bug.<br />
Je pense rÃ©diger un article au sujet de ce plugin trÃ¨s bientÃ´t, so stay plugged !</p>
<p>Lâ€™article <a rel="nofollow" href="/resoudre-le-conflit-entre-google-xml-sitemap-et-contact-form/">RÃ©soudre le conflit entre Google XML Sitemap et Contact Form</a> est apparu en premier sur <a rel="nofollow" href="/">DesireLabs</a>.</p>
]]></content:encoded>
			<wfw:commentRss>/resoudre-le-conflit-entre-google-xml-sitemap-et-contact-form/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">5</post-id>	</item>
	</channel>
</rss>
